--- a\minicraft\entity\Arrow.java
+++ b\minicraft\entity\Arrow.java
@@ -1,19 +1,19 @@
 package minicraft.entity;
 
-import java.util.List;
-
 import minicraft.entity.mob.Mob;
 import minicraft.entity.mob.Player;
 import minicraft.gfx.Color;
 import minicraft.gfx.Rectangle;
 import minicraft.gfx.Screen;
 
+import java.util.List;
+
 public class Arrow extends Entity implements ClientTickable {
 	private Direction dir;
 	private int damage;
 	public Mob owner;
 	private int speed;
-	
+
 	public Arrow(Mob owner, Direction dir, int dmg) {
 		this(owner, owner.x, owner.y, dir, dmg);
 	}
@@ -23,15 +23,15 @@
 		this.x = x;
 		this.y = y;
 		this.dir = dir;
-		
+
 		damage = dmg;
 		col = Color.get(-1, 111, 222, 430);
-		
+
 		if (damage > 3) speed = 8;
 		else if (damage >= 0) speed = 7;
 		else speed = 6;
 	}
-	
+
 	/**
 	 * Generates information about the arrow.
 	 * @return string representation of owner, xdir, ydir and damage.
@@ -39,7 +39,7 @@
 	public String getData() {
 		return owner.eid + ":" + dir.ordinal() + ":"+damage;
 	}
-	
+
 	@Override
 	public void tick() {
 		if (x < 0 || x >> 4 > level.w || y < 0 || y >> 4 > level.h) {
@@ -62,7 +62,7 @@
 			}
 
 			if (!level.getTile(x / 16, y / 16).mayPass(level, x / 16, y / 16, this)
-					&& !level.getTile(x / 16, y / 16).connectsToFluid
+					&& !level.getTile(x / 16, y / 16).connectsToLiquid()
 					&& level.getTile(x / 16, y / 16).id != 16) {
 				this.remove();
 			}
@@ -81,7 +81,7 @@
 		if(dir == Direction.LEFT) xt = 1;
 		if(dir == Direction.UP) xt = 2;
 		if(dir == Direction.DOWN) xt = 3;
-		
+
 		screen.render(x - 4, y - 4, xt + yt * 32, 0);
 	}
 }

