--- a\minicraft\level\tile\RockTile.java
+++ b\minicraft\level\tile\RockTile.java
@@ -23,26 +23,26 @@
 
 public class RockTile extends Tile {
 	private ConnectorSprite sprite = new ConnectorSprite(RockTile.class, new Sprite(18, 6, 3, 3, 1, 3), new Sprite(21, 8, 2, 2, 1, 3), new Sprite(21, 6, 2, 2, 1, 3));
-	
+
 	private boolean dropCoal = false;
 	private int maxHealth = 50;
 
 	private int damage;
-	
+
 	protected RockTile(String name) {
 		super(name, (ConnectorSprite)null);
 		csprite = sprite;
 	}
-	
+
 	public void render(Screen screen, Level level, int x, int y) {
 		sprite.sparse.color = DirtTile.dCol(level.depth);
 		sprite.render(screen, level, x, y);
 	}
-	
+
 	public boolean mayPass(Level level, int x, int y, Entity e) {
 		return false;
 	}
-	
+
 	public boolean hurt(Level level, int x, int y, Mob source, int dmg, Direction attackDir) {
 		hurt(level, x, y, dmg);
 		return true;
@@ -51,10 +51,10 @@
 	public boolean interact(Level level, int xt, int yt, Player player, Item item, Direction attackDir) {
 		if (item instanceof ToolItem) {
 			ToolItem tool = (ToolItem) item;
-			if (tool.type == ToolType.Pickaxe && player.payStamina(4 - tool.level) && tool.payDurability()) {
+			if (tool.type == ToolType.Pickaxe && player.payStamina(4 - ToolItem.LEVELS.get(tool.level)) && tool.payDurability()) {
 				// Drop coal since we use a pickaxe.
 				dropCoal = true;
-				hurt(level, xt, yt, random.nextInt(10) + (tool.level) * 5 + 10);
+				hurt(level, xt, yt, random.nextInt(10) + (ToolItem.LEVELS.get(tool.level)) * 5 + 10);
 				return true;
 			}
 		}

