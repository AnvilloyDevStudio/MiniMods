import groovy.io.FileType
import org.gradle.api.file.FileCopyDetails
import org.gradle.api.tasks.SourceSetOutput
import org.apache.commons.io.FileUtils

plugins {
    id 'java'
    id 'application'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

project.version = '2.0.7'

sourceCompatibility = 8
mainClassName = 'minicraft.core.Game'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()

    maven {
        url "https://www.jabylon.org/maven/"
    }
}

dependencies {
    implementation project(path: ":minicraft-base:source", configuration: "shadow")
}

java {
    withSourcesJar()
}

sourceSets {
    main {
        java { // Getting all dirs.
            def dir = file("patches/minicraft/")
            def tmpDir = file("build/tmp/patches/")
            def javaSrcDir = file("source/src/main/java/")
            tmpDir.mkdirs()
            FileUtils.cleanDirectory(tmpDir)
            copy { // Copy all files
                from javaSrcDir
                into tmpDir
            }

            dir.eachFileRecurse (FileType.FILES) { file ->
                def patcherDir = dir.toPath().relativize(file.toPath()).toString()

                println "Executing patcher for " + file.getPath()
                exec {
                    workingDir buildDir
                    executable 'patch'
                    args "-l", "-p0", "--forward", "-i", file.getPath(), tmpDir.toPath().resolve(patcherDir.substring(0, patcherDir.length() - 6)).toFile().getPath()
                }
                // ant.patch(patchfile: file, originalfile: tmpDir.toPath().resolve(patcherDir.substring(0, patcherDir.length() - 6)).toFile(), ignorewhitespace: true)
            }

            srcDir tmpDir.getPath()
        }
    }
}

tasks.distZip.doFirst {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

tasks.distTar.doFirst {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

shadowJar { // Copying this part from source build.gradle.
    archivesBaseName = 'minicraft_plus'
    archiveClassifier.set('')

    manifest {
        attributes('Main-Class': mainClassName,
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'SplashScreen-Image': "Minicraft_Splash_Screen_3.png")
    }

    // println project.configurations.source.singleFile

    // // with copySpec { // Excluding files which are patched already.
    // //     from zipTree(project.configurations.source.singleFile)
    // //     eachFile { FileCopyDetails action ->
    // //         String path = action.relativePath.pathString
    // //         SourceSetOutput output = sourceSets.main.output

    // //         println path

    // //         // see if overridden by a class
    // //         boolean patched = output.classesDirs.files.any { new File(it, path).exists() }
    // //         if (!patched) {
    // //             // see if overridden by a resource
    // //             patched = new File(output.resourcesDir, path).exists()
    // //         }
    // //         if (patched) {
    // //             logger.info "Using patched version of $path"
    // //         }
    // //             action.exclude()
    // //     }
    // // }
}
