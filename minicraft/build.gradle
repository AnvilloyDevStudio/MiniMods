import groovy.io.FileType
import org.apache.commons.io.FileUtils

plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

project.version = '2.0.7'

sourceCompatibility = 8
mainClassName = 'minicraft.core.Game'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()

    maven {
        url "https://www.jabylon.org/maven/"
    }
}

dependencies {
    api project(path: ":minicraft-base:source", configuration: "shadow")
}

java {
    withSourcesJar()
}

sourceSets {
    main {
        java { // Getting all dirs.
            def dir = file("patches/minicraft/")
            def tmpDir = file("build/tmp/patches/")
            def javaSrcDir = file("source/src/main/java/")
            tmpDir.mkdirs()
            FileUtils.cleanDirectory(tmpDir)
            copy { // Copy all files
                from javaSrcDir
                into tmpDir
            }

            dir.eachFileRecurse (FileType.FILES) { file ->
                def patcherDir = dir.toPath().relativize(file.toPath()).toString()

                println "Executing patcher for " + file.getPath()
                exec {
                    workingDir buildDir
                    // executable buildDir.toPath().resolve("../cmd-elevation.bat").toFile().getCanonicalPath()
                    // args"-Command",
                        // "\$pinfo = New-Object System.Diagnostics.ProcessStartInfo; " +
                        // "\$pinfo.FileName = Get-Command -Name patch; " +
                        // "\$pinfo.RedirectStandardError = \$true; " +
                        // "\$pinfo.RedirectStandardOutput = \$true; " +
                        // "\$pinfo.UseShellExecute = \$false; " +
                        // "\$pinfo.CreateNoWindow = \$true; " +
                        // "\$pinfo.Arguments = \'-l -p0 --forward -i \\\"${file.getPath()}\\\" \\\"${tmpDir.toPath().resolve(patcherDir.substring(0, patcherDir.length() - 6)).toFile().getPath()}\\\"\'; " +
                        // "\$p = New-Object System.Diagnostics.Process; " +
                        // "\$p.StartInfo = \$pinfo; " +
                        // "\$p.Start() | Out-Null; " +
                        // "\$p.WaitForExit(); " +
                        // "\$stdout = \$p.StandardOutput.ReadToEnd(); " +
                        // "\$stderr = \$p.StandardError.ReadToEnd(); " +
                        // "Write-Host \"stdout: \$stdout\"; " +
                        // "Write-Host \"stderr: \$stderr\"; " +
                        // "Write-Host \"exit code: \" + \$p.ExitCode"
                        // "Start-Process \'patch\' -ArgumentList  \'-l -p0 --forward -i \\\"${file.getPath()}\\\" \\\"${tmpDir.toPath().resolve(patcherDir.substring(0, patcherDir.length() - 6)).toFile().getPath()}\\\"\' -Verb runAs -Wait -RedirectStandardOutput \'${buildDir.toString()}\\tmp\\patches\\output.txt\'"
                    // args "patch", "-l", "-p0", "--forward", "-i", file.getPath(), tmpDir.toPath().resolve(patcherDir.substring(0, patcherDir.length() - 6)).toFile().getPath()
                    executable 'patch'
                    args "-l", "-p0", "--forward", "-i", file.getPath(), tmpDir.toPath().resolve(patcherDir.substring(0, patcherDir.length() - 6)).toFile().getPath()
                }
                // ant.patch(patchfile: file, originalfile: tmpDir.toPath().resolve(patcherDir.substring(0, patcherDir.length() - 6)).toFile(), ignorewhitespace: true)
            }

            srcDir tmpDir.getPath()
        }
    }
}

tasks.distZip.doFirst {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

tasks.distTar.doFirst {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

shadowJar { // Copying this part from source build.gradle.
    archivesBaseName = 'minicraft_plus'
    archiveClassifier.set('')

    manifest {
        attributes('Main-Class': mainClassName,
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'SplashScreen-Image': "Minicraft_Splash_Screen_3.png")
    }
}
